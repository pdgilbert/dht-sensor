name: CI

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features stm32f042,dht11 -- -D warnings
  package:
    name: Cargo package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: package
          args: --features stm32f042
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dht: [dht11, dht22]
        # dht x mcu (2x11) form matrix and include adds hal and trg to go along with an mcu
        # Note that there should be one and only one include group for each mcu.
        # If there are additional groups then they are run too, but without dht.
        mcu: [stm32f042, stm32f103, stm32f100, stm32f101, stm32f303xc,
              stm32f401, stm32f411, stm32h742, stm32l0x2, stm32l100, stm32l151]
        #mcu: [stm32f042, stm32f103, stm32f411]
        include:
           - mcu:  stm32f042
             hal: "stm32f0xx"
             trg: "thumbv6m-none-eabi"
         #  - mcu:  stm32f030xc           # this does not fit in flash 
         #    hal: "stm32f0xx"           # even with -- release
         #    trg: "thumbv6m-none-eabi"  #
           - mcu:  stm32f100
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
           - mcu:  stm32f101
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
           - mcu:  stm32f103
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
           - mcu:  stm32f303xc
             hal: "stm32f3xx"
             trg: "thumbv7em-none-eabihf"
           - mcu:  stm32f401
             hal: "stm32f4xx"
             trg: "thumbv7em-none-eabihf"
           - mcu:  stm32f411
             hal: "stm32f4xx"
             trg: "thumbv7em-none-eabihf"
           - mcu:  stm32h742
             hal: "stm32f7xx"
             trg: "thumbv7em-none-eabihf"
           - mcu:  stm32l0x2
             hal: "stm32l0xx"
             trg: "thumbv6m-none-eabi"
           - mcu:  stm32l100
             hal: "stm32l1xx"
             trg: "thumbv7m-none-eabi"
           - mcu:  stm32l151
             hal: "stm32l1xx"
             trg: "thumbv7m-none-eabi"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          #target: thumbv6m-none-eabi
      #- name: experiment1
      #  env:
      #    MCU: ${{ matrix.mcu }}
      #    HAL: ${{ matrix.hal }}
      #  run: echo ${{ matrix.trg }} , $MCU , $HAL , ${{ matrix.dht }}
      #- name: experiment2
      #  run: echo ${{ matrix.trg }} , ${{ matrix.mcu }} , ${{ matrix.hal }} , ${{ matrix.dht }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features ${{ matrix.mcu }},${{ matrix.dht }}
      - name: Build example stm32f042
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target thumbv6m-none-eabi --features stm32f042 --example stm32f042
          use-cross: true
      - name: Build example dht-multi-hals
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.trg }} --features ${{ matrix.hal }},${{ matrix.mcu }},${{ matrix.dht }} --example dht-multi-hals
          use-cross: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib --features ${{ matrix.mcu }}
